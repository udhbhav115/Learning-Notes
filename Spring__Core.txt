1.Beans are known as objects which are managed by spring IOC container.

2.IOC stands for Inversion Of Control and it is responsible for instantiating,wiring(Auto wiring),Managing the life cycle of beans(objects)

3.IOC containers are of two types.
   1.AppicationContext(useful for Enterprise level application)
   2.BeanFactory(useful for lightweight applications)

4.ApplicationContext:
   ex:ApplicationContext context=new AnnotationConfigApplicationContext(AppConfig.class);
      -> We need to pass configuration class(AppConfig.class) as an argument for AnnotationConfigApplicationContext.
      -> The configuration class should contain the bean definitions.

---------------------------------------------------------Example------------------------------------------------------


public class Application {
	
	public static void main(String[] args) {
		
		ApplicationContext context=new AnnotationConfigApplicationContext(AppConfig.class);
		Samsung samsung=context.getBean(Samsung.class);
		samsung.getRedmi().redmi();	
	}
}


@Configuration
public class AppConfig {
	@Bean
	public Samsung getObject() {
		return new Samsung();
	}
	
	@Bean
	public Redmi getRedmiObject() {
		return new Redmi();
	}
}


public class Samsung {
	
	@Autowired
	private Redmi redmi;
	
	public Redmi getRedmi() {
		return redmi;
	}

	public void setRedmi(Redmi redmi) {
		this.redmi = redmi;
	}
}

public class Redmi {
	public void redmi() {
		System.out.println("In redmi function");
	}
}


